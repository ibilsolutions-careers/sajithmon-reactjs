{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\reactprojects\\\\myproject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BookList from \"./components/books\";\nimport Bookshelf from \"./components/bookShelf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  var _selectedBook$authors;\n  const [books, setBooks] = useState([]);\n  const [bookshelf, setBookshelf] = useState([]);\n  const [selectedBook, setSelectedBook] = useState(null); // Track selected book for details\n\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        const apiKey = \"h1TylVtDCbyqnZZWgBXfGhU0lXQr7Cw1\"; // Replace with your actual API key\n        const response = await axios.get(`https://api.nytimes.com/svc/books/v3/lists.json?api-key=${apiKey}&list=hardcover-fiction`); // Specify desired bestseller list (e.g., hardcover-fiction)\n        setBooks(response.data.results.books);\n      } catch (error) {\n        console.error(\"Error fetching books:\", error);\n      }\n    };\n    fetchBooks();\n  }, []); // Empty dependency array to fetch books once on component mount\n\n  const addToBookshelf = book => {\n    setBookshelf(prev => [...prev, book]);\n  };\n  const handleBookClick = book => {\n    setSelectedBook(book); // Update selected book for details display\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bookshelf Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BookList, {\n      books: books,\n      addToBookshelf: addToBookshelf,\n      handleBookClick: handleBookClick // Pass handleBookClick to BookList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bookshelf, {\n      bookshelf: bookshelf\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), selectedBook && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selected Book Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Title: \", selectedBook.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Author(s): \", (_selectedBook$authors = selectedBook.authors) === null || _selectedBook$authors === void 0 ? void 0 : _selectedBook$authors.map(author => author.name).join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), \" // Handle potential missing authors\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"a0AdeEKi6nSGWWi1CngeIUve+Hc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","BookList","Bookshelf","jsxDEV","_jsxDEV","App","_s","_selectedBook$authors","books","setBooks","bookshelf","setBookshelf","selectedBook","setSelectedBook","fetchBooks","apiKey","response","get","data","results","error","console","addToBookshelf","book","prev","handleBookClick","children","fileName","_jsxFileName","lineNumber","columnNumber","title","authors","map","author","name","join","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/reactprojects/myproject/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BookList from \"./components/books\";\nimport Bookshelf from \"./components/bookShelf\";\n\nconst App = () => {\n  const [books, setBooks] = useState([]);\n  const [bookshelf, setBookshelf] = useState([]);\n  const [selectedBook, setSelectedBook] = useState(null); // Track selected book for details\n\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        const apiKey = \"h1TylVtDCbyqnZZWgBXfGhU0lXQr7Cw1\"; // Replace with your actual API key\n        const response = await axios.get(\n          `https://api.nytimes.com/svc/books/v3/lists.json?api-key=${apiKey}&list=hardcover-fiction`\n        ); // Specify desired bestseller list (e.g., hardcover-fiction)\n        setBooks(response.data.results.books);\n      } catch (error) {\n        console.error(\"Error fetching books:\", error);\n      }\n    };\n\n    fetchBooks();\n  }, []); // Empty dependency array to fetch books once on component mount\n\n  const addToBookshelf = (book) => {\n    setBookshelf((prev) => [...prev, book]);\n  };\n\n  const handleBookClick = (book) => {\n    setSelectedBook(book); // Update selected book for details display\n  };\n\n  return (\n    <div>\n      <h1>Bookshelf Application</h1>\n      <BookList\n        books={books}\n        addToBookshelf={addToBookshelf}\n        handleBookClick={handleBookClick} // Pass handleBookClick to BookList\n      />\n      <Bookshelf bookshelf={bookshelf} />\n\n      {/* Conditionally render book details based on selectedBook */}\n      {selectedBook && (\n        <div>\n          <h2>Selected Book Details</h2>\n          <p>Title: {selectedBook.title}</p>\n          <p>Author(s): {selectedBook.authors?.map((author) => author.name).join(\", \")}</p> // Handle potential missing authors\n          {/* Add other details as needed (description, ISBN, etc.) */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}